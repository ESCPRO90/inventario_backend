# Script para probar el m√≥dulo de inventario
$baseUrl = "http://localhost:3001/api"

Write-Host "üîë Obteniendo token de autenticaci√≥n..." -ForegroundColor Yellow

# Login
$loginResponse = Invoke-RestMethod -Uri "$baseUrl/auth/login" `
    -Method Post `
    -ContentType "application/json" `
    -Body '{"username":"admin","password":"admin123"}'

if ($loginResponse.success) {
    $token = $loginResponse.data.token
    Write-Host "‚úÖ Token obtenido exitosamente" -ForegroundColor Green
    
    $headers = @{
        "Authorization" = "Bearer $token"
    }
    
    # 1. Resumen del inventario
    Write-Host "`nüìä RESUMEN DEL INVENTARIO" -ForegroundColor Cyan
    Write-Host "========================" -ForegroundColor Cyan
    try {
        $resumen = Invoke-RestMethod -Uri "$baseUrl/inventario/resumen" `
            -Method Get `
            -Headers $headers
        
        $r = $resumen.data.resumen
        Write-Host "‚úÖ Productos diferentes: $($r.productos_diferentes)" -ForegroundColor White
        Write-Host "‚úÖ Lotes totales: $($r.lotes_totales)" -ForegroundColor White
        Write-Host "‚úÖ Unidades totales: $($r.unidades_totales)" -ForegroundColor White
        Write-Host "üí∞ Valor compra: `$$($r.valor_compra)" -ForegroundColor Green
        Write-Host "üí∞ Valor venta: `$$($r.valor_venta)" -ForegroundColor Green
        Write-Host "üìà Margen potencial: `$$($r.margen_potencial)" -ForegroundColor Yellow
        Write-Host "‚ö†Ô∏è  Productos con stock bajo: $($r.productos_stock_bajo)" -ForegroundColor $(if ($r.productos_stock_bajo -gt 0) { "Red" } else { "Green" })
        Write-Host "‚è∞ Lotes por vencer: $($r.lotes_por_vencer)" -ForegroundColor $(if ($r.lotes_por_vencer -gt 0) { "Red" } else { "Green" })
    } catch {
        Write-Host "‚ùå Error al obtener resumen: $_" -ForegroundColor Red
    }
    
    # 2. Productos con stock cr√≠tico
    Write-Host "`n‚ö†Ô∏è  PRODUCTOS CON STOCK CR√çTICO" -ForegroundColor Yellow
    Write-Host "==============================" -ForegroundColor Yellow
    try {
        $stockCritico = Invoke-RestMethod -Uri "$baseUrl/inventario/stock-critico" `
            -Method Get `
            -Headers $headers
        
        if ($stockCritico.data.total -gt 0) {
            Write-Host "$($stockCritico.data.mensaje)" -ForegroundColor Red
            foreach ($prod in $stockCritico.data.productos | Select-Object -First 5) {
                Write-Host "   üî¥ $($prod.codigo) - $($prod.descripcion)" -ForegroundColor White
                Write-Host "      Stock: $($prod.stock_actual)/$($prod.stock_minimo) | Faltan: $($prod.unidades_faltantes) unidades" -ForegroundColor Gray
            }
        } else {
            Write-Host "‚úÖ $($stockCritico.data.mensaje)" -ForegroundColor Green
        }
    } catch {
        Write-Host "‚ùå Error: $_" -ForegroundColor Red
    }
    
    # 3. Productos pr√≥ximos a vencer
    Write-Host "`n‚è∞ PRODUCTOS PR√ìXIMOS A VENCER (30 d√≠as)" -ForegroundColor Yellow
    Write-Host "======================================" -ForegroundColor Yellow
    try {
        $porVencer = Invoke-RestMethod -Uri "$baseUrl/inventario/proximos-vencer?dias=30" `
            -Method Get `
            -Headers $headers
        
        if ($porVencer.data.total -gt 0) {
            Write-Host "$($porVencer.data.mensaje)" -ForegroundColor Red
            foreach ($prod in $porVencer.data.productos | Select-Object -First 5) {
                Write-Host "   ‚ö†Ô∏è  $($prod.producto_codigo) - Lote: $($prod.lote)" -ForegroundColor White
                Write-Host "      Vence: $($prod.fecha_vencimiento) ($($prod.dias_para_vencer) d√≠as) | Cantidad: $($prod.cantidad_actual) | Valor: `$$($prod.valor_en_riesgo)" -ForegroundColor Gray
            }
        } else {
            Write-Host "‚úÖ $($porVencer.data.mensaje)" -ForegroundColor Green
        }
    } catch {
        Write-Host "‚ùå Error: $_" -ForegroundColor Red
    }
    
    # 4. Inventario por categor√≠as
    Write-Host "`nüì¶ INVENTARIO POR CATEGOR√çAS" -ForegroundColor Cyan
    Write-Host "===========================" -ForegroundColor Cyan
    try {
        $categorias = Invoke-RestMethod -Uri "$baseUrl/inventario/por-categorias" `
            -Method Get `
            -Headers $headers
        
        foreach ($cat in $categorias.data.categorias) {
            Write-Host "üìÅ $($cat.categoria):" -ForegroundColor Yellow
            Write-Host "   Productos: $($cat.productos) | Unidades: $($cat.unidades) | Valor: `$$($cat.valor_total)" -ForegroundColor White
        }
    } catch {
        Write-Host "‚ùå Error: $_" -ForegroundColor Red
    }
    
    # 5. Valorizaci√≥n total
    Write-Host "`nüí∞ VALORIZACI√ìN DEL INVENTARIO" -ForegroundColor Green
    Write-Host "=============================" -ForegroundColor Green
    try {
        $valorizacion = Invoke-RestMethod -Uri "$baseUrl/inventario/valorizacion" `
            -Method Get `
            -Headers $headers
        
        $total = $valorizacion.data.total
        Write-Host "üìä TOTAL GENERAL:" -ForegroundColor Yellow
        Write-Host "   Productos: $($total.productos)" -ForegroundColor White
        Write-Host "   Unidades: $($total.unidades)" -ForegroundColor White
        Write-Host "   Costo total: `$$($total.costo_total)" -ForegroundColor White
        Write-Host "   Valor venta: `$$($total.valor_venta)" -ForegroundColor Green
        Write-Host "   Margen: `$$($total.margen) ($(([math]::Round($total.margen / $total.costo_total * 100, 2)))%)" -ForegroundColor Yellow
    } catch {
        Write-Host "‚ùå Error: $_" -ForegroundColor Red
    }
    
    # 6. An√°lisis de rotaci√≥n
    Write-Host "`nüîÑ AN√ÅLISIS DE ROTACI√ìN (√∫ltimos 30 d√≠as)" -ForegroundColor Cyan
    Write-Host "========================================" -ForegroundColor Cyan
    try {
        $rotacion = Invoke-RestMethod -Uri "$baseUrl/inventario/rotacion?dias=30" `
            -Method Get `
            -Headers $headers
        
        $resumen = $rotacion.data.resumen
        Write-Host "üü¢ Alta rotaci√≥n (‚â§1 mes): $($resumen.alta_rotacion) productos" -ForegroundColor Green
        Write-Host "üü° Media rotaci√≥n (1-3 meses): $($resumen.media_rotacion) productos" -ForegroundColor Yellow
        Write-Host "üü† Baja rotaci√≥n (>3 meses): $($resumen.baja_rotacion) productos" -ForegroundColor Red
        Write-Host "‚ö´ Sin movimiento: $($resumen.sin_movimiento) productos" -ForegroundColor Gray
    } catch {
        Write-Host "‚ùå Error: $_" -ForegroundColor Red
    }
    
    Write-Host "`n‚úÖ An√°lisis de inventario completado!" -ForegroundColor Green
    
} else {
    Write-Host "‚ùå Error en login" -ForegroundColor Red
}